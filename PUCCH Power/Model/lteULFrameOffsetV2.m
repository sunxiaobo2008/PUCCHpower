%lteULFrameOffset PUSCH DRS uplink frame timing estimate 
%   OFFSET=lteULFrameOffset(UE,CHS,WAVEFORM) performs synchronization using
%   PUSCH DRS signals for the time domain waveform WAVEFORM given
%   UE-specific settings UE and PUSCH configuration CHS.
%   UE must be a structure including the following fields:
%   NULRB          - Number of uplink resource blocks
%   NCellID        - Physical layer cell identity
%   NSubframe      - Subframe number
%   CyclicPrefixUL - Optional. Cyclic prefix length 
%                    ('Normal'(default),'Extended')
%   NTxAnts        - Optional. Number of transmission antennas. 
%                    (1(default),2,4)
%   Hopping        - Optional. ('Off'(default),'Group','Sequence')
%   SeqGroup       - Optional. PUSCH sequence group number. (0...29) 
%                    (default 0) (delta_SS)
%   CyclicShift    - Optional. (0...7) (default 0) (yields n1_DMRS)
%   CHS must be a structure including the fields:
%   PRBSet         - A 1- or 2-column matrix, containing the 0-based 
%                    Physical Resource Block (PRB) indices corresponding 
%                    to the slot wise resource allocations for this PUSCH
%   NLayers        - Optional. Number of transmission layers. 
%                    (1(default),2,3,4)
%   DynCyclicShift - Optional. Cyclic Shift for DMRS. (0...7) (default 0)
%                    (yields n2_DMRS)
%   OrthCover      - Optional. Applies ('On') or does not apply 
%                    ('Off', default) orthogonal cover sequence w.
%                    (Activate-DMRS-with OCC)
%
%   For PRBSet, if a column vector is provided, the resource allocation is
%   the same in both slots of the subframe; the 2-column matrix can be used
%   to specify differing PRBs for each slot in a subframe. Note that the
%   PRB indices are 0-based.
%
%   WAVEFORM must be a T-by-P matrix where T is the number of time domain 
%   samples and P is the number of receive antennas; such a matrix can be 
%   generated by SC-FDMA modulation of a resource matrix using the 
%   <a href="matlab:help('lteSCFDMAModulate')">lteSCFDMAModulate</a> function, or by using one of the channel model
%   functions (<a href="matlab:help('lteFadingChannel')">lteFadingChannel</a>, <a href="matlab:help('lteHSTChannel')">lteHSTChannel</a> or <a href="matlab: help('lteMovingChannel')">lteMovingChannel</a>).
%
%   The returned value OFFSET indicates the number of samples from the
%   start of the waveform WAVEFORM to the position in that waveform where
%   the first subframe begins. OFFSET is computed by extracting the timing
%   of the peak of the correlation between WAVEFORM and internally
%   generated reference waveforms containing DRS signals. The correlation
%   is performed separately for each antenna and the antenna with the
%   strongest correlation is used to finally compute OFFSET.
%  
%   Note that OFFSET provides subframe timing; frame timing can be achieved
%   by using OFFSET in conjunction with the subframe number NSubframe in
%   UE-specific settings structure UE. This is consistent with real-world
%   operation in that the basestation will know when (i.e. in which
%   subframe) to expect uplink transmissions.
% 
%   [OFFSET,CORR]=lteULFrameOffset(UE,CHS,WAVEFORM) also returns a complex
%   matrix CORR of the same dimensions as WAVEFORM which is the signal used
%   to extract the timing offset i.e. OFFSET is the position of
%   MAX(ABS(CORR)).
%
%   Example: 
%   Synchronization and demodulation of transmission which has been delayed
%   by 5 samples.
%   
%   ue = lteRMCUL('A3-2');
%   waveform = lteRMCULTool(ue,[1;0;0;1]);
%   tx = [0;0;0;0;0; waveform];
%   offset = lteULFrameOffset(ue,ue.PUSCH,tx)
%   rxGrid = lteSCFDMADemodulate(ue,tx(1+offset:end));
%
%   See also lteFrequencyCorrect, lteFrequencyOffset, lteFadingChannel,
%   lteMovingChannel, lteHSTChannel, lteSCFDMADemodulate.

%   Copyright 2010-2014 The MathWorks, Inc.

function [offset,corr] = lteULFrameOffset(ue,pusch,waveform,DebugFlag)
        
    % Generate the DRS reference, a time-domain waveform containing only 
    % the DRS and set up subframeLength, indicating the number of 
    % time-domain samples in a subframe.
    drsGrid=lteULResourceGrid(ue);
    drsGrid(ltePUSCHDRSIndices(ue,pusch))=ltePUSCHDRS(ue,pusch);
    [drsRef,info]=lteSCFDMAModulate(ue,drsGrid);
    subframeLength=info.SamplingRate*1.0e-3;

    cpLength=double(info.CyclicPrefixLengths(2));
    
    % For each antenna
    corr=zeros(size(waveform));
    offset = [];
    bestCorr=0;
    for i=1:size(waveform,2)
        for j=1:size(drsRef,2)
        
            % Correlate the incoming waveform with the DRS reference.
            drsCorr=xcorr(waveform(:,i),drsRef(:,j));
            drsCorr=abs(drsCorr(length(waveform(:,i)):end)); 
            corr(:,i)=drsCorr;

            % If the peak correlation for this antenna is better than any
            % previous, extract the peak to produce the timing offset value.
            if (max(drsCorr)>bestCorr) 
                idxs=1:length(drsCorr); 
                offset=mod(idxs(drsCorr==max(drsCorr))-1+(cpLength/2),subframeLength)-(cpLength/2);
                offset=offset(1);
                bestCorr=max(drsCorr);
            end
            
        end
        
    end
    
    if DebugFlag
        figure();
        plot(corr);
        grid on;
    end;
    
end
